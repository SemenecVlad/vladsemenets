function Works(o){this.luxury=function(){$("#background").fadeIn(400,function(){$("#modal").css("display","block").animate({opacity:1,top:"5%"},200)})},this.proj2=function(){alert("This project will be added later...")},this.close=function(){$("#modal").animate({opacity:0,top:"45%"},200,function(){$(this).css("display","none"),$("#background").fadeOut(400)})};var t=this;o.onclick=function(o){var n=o.target,i=n.getAttribute("data-action");i&&t[i]()}}$().ready(function(){var o=$("img").length,t=o/100,n=0,i=0;o>0&&($("body").append('<div id="top_progess_bar"> </div>'),$("#top_progess_bar").css("position","fixed").css("top",0).css("left",0).css("width","0%").css("height","4px").css("background-color","red").css("z-index",1e5)),$("img").load(function(){i++,n+=t,n>=100&&$("#top_progess_bar").remove(),$("#top_progess_bar").css("width",n+"%")}),$(window).load(function(){$("#top_progess_bar").remove()})});var SmoothScroll=$(function(){$('a[href*="#"]:not([href="#"])').click(function(){if(location.pathname.replace(/^\//,"")==this.pathname.replace(/^\//,"")&&location.hostname==this.hostname){var o=$(this.hash);if(o=o.length?o:$("[name="+this.hash.slice(1)+"]"),o.length)return $("html, body").animate({scrollTop:o.offset().top},1e3),!1}})}),toTop=$(function(){$.fn.scrollToTop=function(){$(this).hide().removeAttr("href"),"0"!=$(window).scrollTop()&&$(this).fadeIn("slow");var o=$(this);$(window).scroll(function(){"0"==$(window).scrollTop()?$(o).fadeOut("slow"):$(o).fadeIn("slow")}),$(this).click(function(){$("html, body").animate({scrollTop:0},"slow")})}});$(function(){$("#toTop").scrollToTop()});var formAjax=$(document).ready(function(){$("form").submit(function(){var o=$(this);return $.ajax({type:"POST",url:"send.php",data:o.serialize()}).done(function(){alert("Thank you!"),setTimeout(function(){o.trigger("reset")},1e3)}),!1})});new Works(works);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
